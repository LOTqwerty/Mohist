--- a/net/minecraft/network/NettyPacketEncoder.java
+++ b/net/minecraft/network/NettyPacketEncoder.java
@@ -25,7 +_,7 @@
       } else {
          Integer integer = protocoltype.func_179246_a(this.field_152500_c, p_encode_2_);
          if (field_150798_a.isDebugEnabled()) {
-            field_150798_a.debug(field_150797_b, "OUT: [{}:{}] {}", p_encode_1_.channel().attr(NetworkManager.field_150739_c).get(), integer, p_encode_2_.getClass().getName());
+            field_150798_a.debug(com.mohistmc.util.i18n.i18n.get("nettypacketencoder.1", p_encode_1_.channel().attr(NetworkManager.field_150739_c).get(), integer, p_encode_2_.getClass().getName()));
          }
 
          if (integer == null) {
@@ -37,7 +_,7 @@
             try {
                p_encode_2_.func_148840_b(packetbuffer);
             } catch (Throwable throwable) {
-               field_150798_a.error(throwable);
+               field_150798_a.error("Error encoding packet", throwable); // Forge: Get Minecraft to spit out more information about the Throwable we got.
                if (p_encode_2_.func_211402_a()) {
                   throw new SkipableEncoderException(throwable);
                } else {
